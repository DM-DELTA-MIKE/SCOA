/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deltamike.scoa.view.academico.cadastrar;

import deltamike.scoa.controller.academico.curso.CursoController;
import deltamike.scoa.controller.academico.disciplina.DisciplinaController;
import deltamike.scoa.controller.academico.sala.SalaController;
import deltamike.scoa.controller.academico.turma.TurmaController;
import deltamike.scoa.dtos.academico.turma.TurmaDTO;
import deltamike.scoa.model.academico.curso.CursoModel;
import deltamike.scoa.model.academico.disciplina.DisciplinaModel;
import deltamike.scoa.model.academico.sala.SalaModel;
import deltamike.scoa.model.academico.turma.TurmaModel;
import deltamike.scoa.view.Dashboard;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.swing.table.DefaultTableModel;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

/**
 *
 * @author rodri
 */
public class CadastrarTurmaFrame extends javax.swing.JFrame {
    private List<CursoModel> cursos;
    private List<DisciplinaModel> disciplinas;
    private List<SalaModel> salas;
    /**
     * Creates new form CadastrarTurmaFrame
     */
    public CadastrarTurmaFrame() {
        initComponents();
        
        //populando combo box de cursos
        CursoController cursoController = (CursoController) Dashboard.springAppContext.getBean("cursoController");
        this.cursos = cursoController.getAll().getBody();
        
        for(CursoModel curso : cursos){
            this.cursoComboBox.addItem(curso.getNome());
        }
        
        //populando combo box de salas
        SalaController salaController = (SalaController) Dashboard.springAppContext.getBean("salaController");
        this.salas = salaController.getAll().getBody();
        
        for(SalaModel sala : salas){
            this.salaComboBox.addItem(sala.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        horarioTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nomeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cursoComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        salaComboBox = new javax.swing.JComboBox<>();
        cadastrarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDisciplinas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Disciplina");

        jLabel3.setText("Horario");

        jLabel4.setText("Nome");

        jLabel5.setText("Curso");

        cursoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cursoComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Sala");

        cadastrarButton.setText("Cadastrar");
        cadastrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarButtonActionPerformed(evt);
            }
        });

        tabelaDisciplinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaDisciplinas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cadastrarButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(nomeTextField)
                    .addComponent(horarioTextField)
                    .addComponent(cursoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cursoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadastrarButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cursoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cursoComboBoxActionPerformed
        // TODO add your handling code here:
        if(this.disciplinas == null){
            this.disciplinas = new ArrayList<>();
        }
        DefaultTableModel model = (DefaultTableModel) this.tabelaDisciplinas.getModel();
        model.setRowCount(0);
        
        CursoModel curso = this.cursos.get( this.cursoComboBox.getSelectedIndex() );
        
        DisciplinaController disciplinaController = (DisciplinaController) Dashboard.springAppContext.getBean("disciplinaController");
        List<DisciplinaModel> disciplinas = disciplinaController.getAll().getBody();
        
        for(DisciplinaModel disciplina : disciplinas){
            if(disciplina.getCurso() == null || !Objects.equals(disciplina.getCurso().getId(), curso.getId())){continue;}
            
            model.addRow(new Object[]{disciplina.getNome()});
            this.disciplinas.add(disciplina);
        }
        
    }//GEN-LAST:event_cursoComboBoxActionPerformed

    private void cadastrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarButtonActionPerformed
        // TODO add your handling code here:
        CursoController cursoController  = (CursoController) Dashboard.springAppContext.getBean("cursoController");
        DisciplinaController disciplinaController  = (DisciplinaController) Dashboard.springAppContext.getBean("disciplinaController");
        SalaController salaController  = (SalaController) Dashboard.springAppContext.getBean("salaController");
        TurmaController turmaController = (TurmaController) Dashboard.springAppContext.getBean("turmaController");
        
        CursoModel curso = (CursoModel) cursoController.getById( this.cursos.get( this.cursoComboBox.getSelectedIndex()).getId() ).getBody();
        SalaModel sala = (SalaModel) salaController.getById( this.salas.get(this.salaComboBox.getSelectedIndex()).getId() ).getBody() ;
        
        int[] rows = this.tabelaDisciplinas.getSelectedRows();
        ArrayList<DisciplinaModel> disciplinas_selecionadas = new ArrayList<>();
        
        for(int row_index : rows){
            disciplinas_selecionadas.add(this.disciplinas.get(row_index));
        }
        
        TurmaDTO turmaDTO = new TurmaDTO();
        turmaDTO.setCurso(curso);
        turmaDTO.setSala(sala);
        turmaDTO.setHorario(this.horarioTextField.getText());
        turmaDTO.setNome(this.nomeTextField.getText());
        
        ResponseEntity<Object> response = turmaController.saveTurma(turmaDTO);
        
        if(response.getStatusCode() != HttpStatus.CREATED){
            Dashboard.alert("Erro ao cadastrar turma");
            return;
        }
        
        TurmaModel turma = (TurmaModel) response.getBody();
        
        for(DisciplinaModel disciplina : disciplinas_selecionadas){
            response = turmaController.colocarDisciplinaEmTurma(turma.getId(), disciplina.getId());
            
            if(!(response.getStatusCode() == HttpStatus.OK)){
                Dashboard.alert("Erro ao relacionar turma com disciplina: " + disciplina.getNome());
                return;
            }
        }
        
        Dashboard.alert("Turma cadastrada com sucesso");
        
    }//GEN-LAST:event_cadastrarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarTurmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarTurmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarTurmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarTurmaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarTurmaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrarButton;
    private javax.swing.JComboBox<String> cursoComboBox;
    private javax.swing.JTextField horarioTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JComboBox<String> salaComboBox;
    private javax.swing.JTable tabelaDisciplinas;
    // End of variables declaration//GEN-END:variables
}
