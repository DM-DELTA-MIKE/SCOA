/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deltamike.scoa.view.financeiro;

import deltamike.scoa.controller.financeiro.folhadepagamento.FolhaDePagamentoController;
import deltamike.scoa.controller.financeiro.mensalidade.MensalidadeController;
import deltamike.scoa.model.financeiro.folhadepagamento.FolhaDePagamentoModel;
import deltamike.scoa.model.financeiro.mensalidade.MensalidadeModel;
import deltamike.scoa.view.Dashboard;
import deltamike.scoa.view.financeiro.cadastrar.CadastrarFolhaDePagamentoFrame;
import deltamike.scoa.view.financeiro.cadastrar.CadastrarMensalidadeFrame;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rodri
 */
public class FinanceiroDashboard extends javax.swing.JFrame {

    /**
     * Creates new form FinanceiroDashboard
     */
    public FinanceiroDashboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pagamentosTab = new javax.swing.JPanel();
        atualizarPagamentosButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPagamentos = new javax.swing.JTable();
        mensalidadesTab = new javax.swing.JPanel();
        atualizarMensalidadesButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaMensalidades = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        cadastrarMenu = new javax.swing.JMenu();
        pagamentoMenuItem = new javax.swing.JMenuItem();
        mensalidadeMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        atualizarPagamentosButton.setText("Atualizar");
        atualizarPagamentosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarPagamentosButtonActionPerformed(evt);
            }
        });

        tabelaPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Data", "Pagamento bruto", "Pagamento liquido", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaPagamentos);

        javax.swing.GroupLayout pagamentosTabLayout = new javax.swing.GroupLayout(pagamentosTab);
        pagamentosTab.setLayout(pagamentosTabLayout);
        pagamentosTabLayout.setHorizontalGroup(
            pagamentosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagamentosTabLayout.createSequentialGroup()
                .addComponent(atualizarPagamentosButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );
        pagamentosTabLayout.setVerticalGroup(
            pagamentosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagamentosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarPagamentosButton)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Folha de pagamentos", pagamentosTab);

        atualizarMensalidadesButton.setText("Atualizar");
        atualizarMensalidadesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarMensalidadesButtonActionPerformed(evt);
            }
        });

        tabelaMensalidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Data de criação", "Parcela fixa (R$)", "Parcela variavel (R$/h)", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaMensalidades);

        javax.swing.GroupLayout mensalidadesTabLayout = new javax.swing.GroupLayout(mensalidadesTab);
        mensalidadesTab.setLayout(mensalidadesTabLayout);
        mensalidadesTabLayout.setHorizontalGroup(
            mensalidadesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
            .addGroup(mensalidadesTabLayout.createSequentialGroup()
                .addComponent(atualizarMensalidadesButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mensalidadesTabLayout.setVerticalGroup(
            mensalidadesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mensalidadesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarMensalidadesButton)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mensalidades", mensalidadesTab);

        cadastrarMenu.setText("Cadastrar");
        cadastrarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarMenuActionPerformed(evt);
            }
        });

        pagamentoMenuItem.setText("Pagamento");
        pagamentoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagamentoMenuItemActionPerformed(evt);
            }
        });
        cadastrarMenu.add(pagamentoMenuItem);

        mensalidadeMenuItem.setText("Mensalidade");
        mensalidadeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensalidadeMenuItemActionPerformed(evt);
            }
        });
        cadastrarMenu.add(mensalidadeMenuItem);

        jMenuBar1.add(cadastrarMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void atualizarPagamentosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarPagamentosButtonActionPerformed
        // TODO add your handling code here:
        FolhaDePagamentoController controller = (FolhaDePagamentoController) Dashboard.springAppContext.getBean("folhaDePagamentoController");
        List<FolhaDePagamentoModel> folhas = controller.getAll().getBody();
        
        DefaultTableModel model = (DefaultTableModel) this.tabelaPagamentos.getModel();
        
        model.setRowCount(0);
        
        //data, pagamento bruto, pagamento liquido, email
        for(FolhaDePagamentoModel folha : folhas){
            model.addRow(new Object[]{
                folha.getData().toString(),
                folha.getPagamento_bruto(),
                folha.getPagamento_liquido(),
                folha.getFuncionario() != null && folha.getFuncionario().getUsuario() != null ? // pega o nome do usuario ligado ao funcionario recebendo o pagamento, se o funcionario não existir ou o funcionario não estiver relacionado a nenhum usuario, retorna uma string vazia.
                    folha.getFuncionario().getUsuario().getId()
                :""
            });
        }
        
    }//GEN-LAST:event_atualizarPagamentosButtonActionPerformed

    private void cadastrarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cadastrarMenuActionPerformed

    private void pagamentoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagamentoMenuItemActionPerformed
        // TODO add your handling code here:
        CadastrarFolhaDePagamentoFrame cadastrarFolhaDePagamentoFrame = new CadastrarFolhaDePagamentoFrame();
        cadastrarFolhaDePagamentoFrame.setVisible(true);
    }//GEN-LAST:event_pagamentoMenuItemActionPerformed

    private void atualizarMensalidadesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarMensalidadesButtonActionPerformed
        // TODO add your handling code here:
        MensalidadeController mensalidadeController = (MensalidadeController) Dashboard.springAppContext.getBean("mensalidadeController");
        List<MensalidadeModel> mensalidades = mensalidadeController.getAll().getBody();
        
        DefaultTableModel model = (DefaultTableModel) this.tabelaMensalidades.getModel();
        model.setRowCount(0);
        
        //data de criação, parcela fixa, parcela variavel, email
        for(MensalidadeModel mensalidade: mensalidades){
            model.addRow(new Object[]{
                mensalidade.getData().toString(),
                mensalidade.getParcela_fixa(),
                mensalidade.getParcela_variavel(),
                mensalidade.getAluno() != null && mensalidade.getAluno().getUsuario() != null ?
                    mensalidade.getAluno().getUsuario().getId()
                :""
            });
        }
        
    }//GEN-LAST:event_atualizarMensalidadesButtonActionPerformed

    private void mensalidadeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensalidadeMenuItemActionPerformed
        // TODO add your handling code here:
        CadastrarMensalidadeFrame cadastrarMensalidadeFrame = new CadastrarMensalidadeFrame();
        cadastrarMensalidadeFrame.setVisible(true);
    }//GEN-LAST:event_mensalidadeMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinanceiroDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinanceiroDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinanceiroDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinanceiroDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinanceiroDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizarMensalidadesButton;
    private javax.swing.JButton atualizarPagamentosButton;
    private javax.swing.JMenu cadastrarMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem mensalidadeMenuItem;
    private javax.swing.JPanel mensalidadesTab;
    private javax.swing.JMenuItem pagamentoMenuItem;
    private javax.swing.JPanel pagamentosTab;
    private javax.swing.JTable tabelaMensalidades;
    private javax.swing.JTable tabelaPagamentos;
    // End of variables declaration//GEN-END:variables
}
